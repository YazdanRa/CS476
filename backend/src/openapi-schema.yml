openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /user/info:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - user
  /user/groups:
    get:
      operationId: listGroups
      description: ''
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
          description: ''
      tags:
      - user
  /auth/otp/request:
    post:
      operationId: createRequestOneTimePassword
      description: Request One Time Email Code Login View
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - auth
  /auth/otp/verify:
    post:
      operationId: createValidateOneTimePassword
      description: Validate One Time Email Code Login View
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - auth
  /auth/token/register:
    post:
      operationId: createRegister
      description: Register users gateway
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
      tags:
      - auth
  /auth/token/login:
    post:
      operationId: createLogin
      description: Login users gateway
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - auth
  /auth/token/logout:
    post:
      operationId: createLogout
      description: Logout user
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - auth
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        token:
          type: string
          readOnly: true
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
            required:
            - id
            - name
        last_login:
          type: string
          format: date-time
          nullable: true
        first_name:
          type: string
          maxLength: 128
        last_name:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - groups
      - email
    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      required:
      - id
      - name
    Register:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 128
        last_name:
          type: string
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - password
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
