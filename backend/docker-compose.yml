version: "3.8"


services:
  db:
    image: postgres:16-alpine
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"

  app:
    build: .
    env_file:
      - .env
    volumes:
      - ${app_ROOT:-.}:/usr/app
      - ~/.ipython:/root/ipython
    depends_on:
      - db
    ports:
      - "8000:8000"
    command: >
      gunicorn src.election.wsgi:application
        --name app-gunicorn
        --bind 0.0.0.0:8000
        --workers 4
        --pythonpath /usr/app/src
        --log-level=debug
        --reload
        --timeout 120

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_share:/usr/share/grafana

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

volumes:
  dbdata:
  grafana_data:
  grafana_share:
  prometheus_data: